version: '3'

# task fresh でシーディングが行われる..
tasks:
  test:
    cmds:
      - docker exec -i laravel_app ./vendor/bin/pest --colors=always /var/www/html/tests

  fresh:
    cmds:
      - docker compose exec app php artisan migrate:fresh --seed

  npm-build:
    cmds:
      - docker compose exec app npm run build
  
  npm-dev:
    cmds:
      - docker compose exec app npm run dev

  production-install:
    cmds:
      - task: build
      - task: up
      # key:genenrateとかは composer installしてからじゃないと動かない
      - docker compose exec app composer install
      - docker compose exec app npm install
      - docker compose exec app cp .env.production.example .env
      - docker compose exec app php artisan key:generate
      - docker compose exec app php artisan storage:link
      - docker compose exec app chmod -R 777 storage bootstrap/cache
      - task: npm-build
      - task: fresh

  local-install:
    cmds:
      - task: build
      - task: up
      # ↓composer i が key;geneとかより先
      - docker compose exec app composer install
      - docker compose exec app npm install
      - docker compose exec app cp .env.local.example .env
      - docker compose exec app php artisan key:generate
      - docker compose exec app php artisan storage:link
      - docker compose exec app chmod -R 777 storage bootstrap/cache
      - task: fresh

  build:
    cmds:
      - docker compose build --no-cache

  up:
    cmds:
      - docker compose up

  down:
    cmds:
      - docker compose down --remove-orphans

  down-v:
    cmds:
      - docker compose down --remove-orphans --volumes

  stop:
    cmds:
      - docker compose stop

  restart:
    cmds:
      - task: down
      - task: up

  destroy:
    cmds:
      - docker compose down --rmi all --volumes --remove-orphans

  remake:
    cmds:
      - task: destroy
      - task: install

  ps:
    cmds:
      - docker compose ps

  web:
    cmds:
      - docker compose exec web bash

  app:
    cmds:
      - docker compose exec app bash
  
  init-env-linux:
    cmds:
      - echo "UID=$(id -u)" > .env
      - echo "GID=$(id -g)" >> .env

  tinker:
    cmds:
      - docker compose exec app php artisan tinker

  dump:
    cmds:
      - docker compose exec app php artisan dump-server
  
  dump-autoload:
    cmds:
      - docker compose exec app composer dump-autoload

  migrate:
    cmds:
      - docker compose exec app php artisan migrate

  seed:
    cmds:
      - docker compose exec app php artisan db:seed

  dacapo:
    cmds:
      - docker compose exec app php artisan dacapo

  rollback-test:
    cmds:
      - docker compose exec app php artisan migrate:fresh
      - docker compose exec app php artisan migrate:refresh

  optimize:
    cmds:
      - docker compose exec app php artisan optimize

  optimize-clear:
    cmds:
      - docker compose exec app php artisan optimize:clear

  cache:
    cmds:
      - docker compose exec app composer dump-autoload --optimize
      - docker compose exec app php artisan optimize
      - docker compose exec app php artisan event:cache
      - docker compose exec app php artisan view:cache

  cache-clear:
    cmds:
      - docker compose exec app composer clear-cache
      - docker compose exec app php artisan optimize:clear
      - docker compose exec app php artisan event:clear
      - docker compose exec app php artisan view:clear

  db:
    cmds:
      - docker compose exec db bash

  sql:
    cmds:
      - docker compose exec db bash -c 'mysql -u $$MYSQL_USER -p$$MYSQL_PASSWORD $$MYSQL_DATABASE'

  redis:
    cmds:
      - docker compose exec redis redis-cli

  ide-helper:
    cmds:
      - docker compose exec app php artisan clear-compiled
      - docker compose exec app php artisan ide-helper:generate
      - docker compose exec app php artisan ide-helper:meta
      - docker compose exec app php artisan ide-helper:models --write --reset

  pint:
    cmds:
      - docker compose exec app ./vendor/bin/pint --verbose

  pint-test:
    cmds:
      - docker compose exec app ./vendor/bin/pint --verbose --test
